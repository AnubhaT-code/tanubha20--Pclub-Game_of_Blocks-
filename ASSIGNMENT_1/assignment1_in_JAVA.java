import java.util.*;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class cryptohash
 {
    public static String encryptThisString(String input)
    {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] messageDigest = md.digest(input.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) 
            {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        }
        catch (NoSuchAlgorithmException e) 
        {
            throw new RuntimeException(e);
        }
    }

    public static void main(String args[]) throws NoSuchAlgorithmException , InterruptedException
    {
           
        Scanner sc=new Scanner (System.in);
        System.out.println("Enter a String");
        String S=sc.nextLine();
        long startTime = System.nanoTime();
        System.out.println("String you entered - "+S);
        String newS=encryptThisString(S);
        System.out.println("HashCode Generated by SHA-256 for entered String - " + newS);
            int len=newS.length();
            String tempS="";
            String hashS="";
            for(int i=0;;i++)
            {
                tempS=S+String.valueOf(i);
                hashS=encryptThisString(tempS);
                len=hashS.length();
                if(len==59)
                {
                System.out.println("Magic Number - " +i);
                break;
                }
        }
            System.out.println("Entered String appended with magic number - "+tempS);
            if(len<64)
            {
                for(int j=1;j<=(64-len);j++)
                {
                    hashS= "0"+hashS;
                 }
             }
            System.out.println("HashCode Generated by SHA-256 for changed String - "+hashS);   
            long endTime = System.nanoTime();
            long timeElapsed = endTime - startTime;
            System.out.println("Time taken to get this nonce value - " + (timeElapsed/1000000000.0)+" seconds. ");
            
    }
}
